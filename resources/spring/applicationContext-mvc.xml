<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">

	<context:property-placeholder location="classpath:properties/application.properties" />
	
	<!-- 自动扫描且只扫描@Controller -->
	<context:component-scan base-package="com.lczy" use-default-filters="false" >
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<!-- 因为方法定义为直接返回字符串时(Html或Json内容)，调用的是StringHttpMessageConverter，
			            而此Converter默认编码是ISO-85591，为避免乱码，需要重新设为UTF-8。 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
	    	    <constructor-arg value="UTF-8" />
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	    
    <!-- 启动JSON格式的配置 -->
    <bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <!-- 解决 HttpMediaTypeNotAcceptableException: Could not find acceptable representation -->
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>

	<!-- 静态资源的处理：方案一
		将无法mapping到Controller的path交给default servlet handler处理  
	<mvc:default-servlet-handler/>
	-->
	
	<!-- 静态资源的处理：方案二 -->
    <mvc:resources mapping="/static/**" location="/static/" />
    <mvc:resources mapping="/*.ico" location="/" />
    
	<!-- 拦截器 start -->
	<mvc:interceptors>
		<!-- 防止重复提交 Token 拦截器 -->
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<bean class="com.lczy.common.web.TokenInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
	<!-- 拦截器  end -->
	
	<!-- 定义JSP文件的位置 -->  
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	
	<!-- 定义无Controller的path<->view直接映射 	-->
	<mvc:view-controller path="/login"     view-name="login"        />
	<mvc:view-controller path="/error/400" view-name="error/400" />
	<mvc:view-controller path="/error/403" view-name="error/403" />
	<mvc:view-controller path="/error/404" view-name="error/404" />
	<mvc:view-controller path="/error/500"                view-name="error/500" />
	<mvc:view-controller path="/error/invalidToken"       view-name="error/invalidToken"       />
	<mvc:view-controller path="/error/uploadSizeExceeded" view-name="error/uploadSizeExceeded" />
	
    <!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <!-- 指定所上传文件的总大小,
             注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 。20M -->  
        <property name="maxUploadSize" value="20000000"/>
    </bean>
    
	<!-- 解决spring mvc不打印某些异常的问题 . p:order 是 <property order="xxx">标签的同义词 
	<bean id="customHandlerExceptionResolver" 
		class="com.lczy.common.exception.CustomHandlerExceptionResolver" p:order="1" />
	-->
	
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">  
			<props>  
				<prop key="org.springframework.validation.BindException" >error/400</prop>
				<prop key="org.apache.shiro.authz.UnauthorizedException" >error/403</prop>
				<prop key="com.lczy.common.exception.InvalidTokenException" >error/invalidToken</prop>
				<prop key="org.springframework.web.multipart.MaxUploadSizeExceededException" >error/uploadSizeExceeded</prop>
            </props>  
		</property>
		<property name="warnLogCategory">
			<value>org.springframework.web.servlet.handler.SimpleMappingExceptionResolver</value>
		</property>
    </bean> 

    <!-- AOP式方法级权限检查 -->
    <!-- 为Controller层安全检查使用Shiro 的注解（例如，@RequiresRoles，@RequiresPermissions 等等）。 -->
    <bean
        class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true" />
    </bean>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager" />
    </bean>
    <!-- /AOP式方法级权限检查 -->
    	 
</beans>
