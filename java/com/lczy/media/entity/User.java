package com.lczy.media.entity;

// Generated 2015-3-27 17:06:05 by Hibernate Tools 4.3.1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.annotations.GenericGenerator;
import org.springframework.format.annotation.DateTimeFormat;

/**
 * User generated by hbm2java
 */
/**
 * @author wu
 *
 */
@Entity
@Table(name = "c_user")
@Cache(usage=CacheConcurrencyStrategy.READ_WRITE)
public class User implements java.io.Serializable {

	private static final long serialVersionUID = -1195274518295698070L;
	private String id;
	private Customer customer;
	private String nickname;
	private String loginName;
	private String password;
	private String salt;
	private String pwdQuestion;
	private String pwdAnswer;
	private String secEmail;
	private String secMobile;
	private Date createTime;
	private Date lastTime;
	private String lastIp;
	private Date latestTime;
	private String latestIp;
	private String status;
	private Role role;
	private Date expiredTime;
	private boolean shutup;

	public User() {
	}
	
	@Id
	@Column(name = "ID", unique = true, nullable = false, length = 32)
	@GeneratedValue(generator = "system-uuid")
	@GenericGenerator(name = "system-uuid", strategy = "uuid")
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@OneToOne(fetch=FetchType.LAZY)
	@JoinColumn(name = "CUST_ID")
	public Customer getCustomer() {
		return customer;
	}

	public void setCustomer(Customer customer) {
		this.customer = customer;
	}

	@Column(name = "NICKNAME", length = 128)
	public String getNickname() {
		return this.nickname;
	}

	public void setNickname(String nickname) {
		this.nickname = nickname;
	}

	@Column(name = "LOGIN_NAME", nullable = false, length = 128)
	public String getLoginName() {
		return this.loginName;
	}

	public void setLoginName(String loginName) {
		this.loginName = loginName;
	}

	@Column(name = "PASSWORD", nullable = false, length = 128)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "SALT", nullable = false, length = 128)
	public String getSalt() {
		return this.salt;
	}

	public void setSalt(String salt) {
		this.salt = salt;
	}

	@Column(name = "PWD_QUESTION", length = 256)
	public String getPwdQuestion() {
		return this.pwdQuestion;
	}

	public void setPwdQuestion(String pwdQuestion) {
		this.pwdQuestion = pwdQuestion;
	}

	@Column(name = "PWD_ANSWER", length = 256)
	public String getPwdAnswer() {
		return this.pwdAnswer;
	}

	public void setPwdAnswer(String pwdAnswer) {
		this.pwdAnswer = pwdAnswer;
	}

	@Column(name = "SEC_EMAIL", length = 128)
	public String getSecEmail() {
		return this.secEmail;
	}

	public void setSecEmail(String secEmail) {
		this.secEmail = secEmail;
	}

	@Column(name = "SEC_MOBILE", length = 128)
	public String getSecMobile() {
		return this.secMobile;
	}

	public void setSecMobile(String secMobile) {
		this.secMobile = secMobile;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATE_TIME", length = 19)
	public Date getCreateTime() {
		return this.createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LAST_TIME", length = 19)
	public Date getLastTime() {
		return this.lastTime;
	}

	public void setLastTime(Date lastTime) {
		this.lastTime = lastTime;
	}

	@Column(name = "LAST_IP", length = 128)
	public String getLastIp() {
		return this.lastIp;
	}

	public void setLastIp(String lastIp) {
		this.lastIp = lastIp;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LATEST_TIME", length = 19)
	public Date getLatestTime() {
		return this.latestTime;
	}

	public void setLatestTime(Date latestTime) {
		this.latestTime = latestTime;
	}

	@Column(name = "LATEST_IP", length = 128)
	public String getLatestIp() {
		return this.latestIp;
	}

	public void setLatestIp(String latestIp) {
		this.latestIp = latestIp;
	}

	@Column(name = "STATUS", nullable = false, length = 20)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	private String type;

	@Column(name = "type", nullable=false, length=32)
	public String getType() {
		return type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name = "ROLE_ID")
	public Role getRole() {
		return role;
	}

	public void setRole(Role role) {
		this.role = role;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "EXPIRED_TIME", length = 19)
	@DateTimeFormat(pattern="yyyy-MM-dd")
	public Date getExpiredTime() {
		return expiredTime;
	}

	public void setExpiredTime(Date expiredTime) {
		this.expiredTime = expiredTime;
	}

	@Column(name = "SHUTUP")
	public boolean isShutup() {
		return shutup;
	}

	public void setShutup(boolean shutup) {
		this.shutup = shutup;
	}
	
}
