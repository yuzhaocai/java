package com.lczy.media.entity;

// Generated 2015-3-27 18:53:05 by Hibernate Tools 4.3.1

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.annotations.GenericGenerator;

/**
 * Role generated by hbm2java
 */
@Entity
@Table(name = "c_role")
@Cache(usage=CacheConcurrencyStrategy.READ_WRITE)
public class Role {
	
	private String id;
	private String roleCode;
	private String roleName;
	private List<User> users = new ArrayList<User>(0);
	private Collection<Function> functions = new ArrayList<Function>(0);
	private String roleType;

	public Role() {
	}

	public Role(String id, String roleCode, String roleName) {
		this.id = id;
		this.roleCode = roleCode;
		this.roleName = roleName;
	}

	public Role(String id, String roleCode, String roleName, List<User> users,
			List<Function> functions) {
		this.id = id;
		this.roleCode = roleCode;
		this.roleName = roleName;
		this.users = users;
		this.functions = functions;
	}

	@Id
	@Column(name = "ID", unique = true, nullable = false, length = 32)
	@GeneratedValue(generator = "system-uuid")
	@GenericGenerator(name = "system-uuid", strategy = "uuid")
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@Column(name = "ROLE_CODE", nullable = false, length = 20)
	public String getRoleCode() {
		return this.roleCode;
	}

	public void setRoleCode(String roleCode) {
		this.roleCode = roleCode;
	}

	@Column(name = "ROLE_NAME", nullable = false, length = 128)
	public String getRoleName() {
		return this.roleName;
	}

	public void setRoleName(String roleName) {
		this.roleName = roleName;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy="role")
	public List<User> getUsers() {
		return this.users;
	}

	public void setUsers(List<User> users) {
		this.users = users;
	}

	@ManyToMany(fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE })
	@JoinTable(name = "c_role_func", 
		joinColumns = { @JoinColumn(name = "ROLE_ID") }, 
		inverseJoinColumns = { @JoinColumn(name = "FUNC_ID") })
	public Collection<Function> getFunctions() {
		return this.functions;
	}

	public void setFunctions(List<Function> functions) {
		this.functions = functions;
	}

	@Column(name="ROLE_TYPE")
	public String getRoleType() {
		return roleType;
	}

	public void setRoleType(String roleType) {
		this.roleType = roleType;
	}

}
