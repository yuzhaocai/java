package com.lczy.media.entity;

// Generated 2015-3-27 17:06:05 by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Cacheable;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Order generated by hbm2java
 */
@Entity
@Table(name = "t_order")
@Cacheable
public class Order implements java.io.Serializable {

	private static final long serialVersionUID = -1199379601628892046L;
	
	private String id;
	private Customer reqOwner;
	private Customer mediaOwner;
	private Customer receiver;
	private Loan loan;
	private Deliverable deliverable;
	private Media media;
	private Requirement requirement;
	private String quoteType;
	private int amount;
	private int amountMedia;
	private Integer tax;
	private String paymentType;
	private String status;
	private String createBy;
	private Date createTime;
	private String modifyBy;
	private Date modifyTime;
	private boolean finished;
	private String refuseReason;
	private int invoice;
	private Set<Invoice> invoices = new HashSet<>();
	
	private boolean hasMessage4A;
	private boolean hasMessage4P;

	@Id
	@Column(name = "ID", unique = true, nullable = false, length = 32)
	@GenericGenerator( name="id_gen", strategy="com.lczy.common.data.FormatTableGenerator", 
	   parameters = {
			@Parameter( name = "format",         value = "%1$ty%1$tm%1$td%2$010d"),
			@Parameter( name = "table_name",     value = "sys_sequences"),
			@Parameter( name = "segment_value",  value = "ord_seq"),
			@Parameter( name = "increment_size", value = "10"), 
			@Parameter( name = "optimizer",      value = "pooled-lo")
	   })
	@GeneratedValue(generator="id_gen")
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "REQ_OWNER")
	public Customer getReqOwner() {
		return this.reqOwner;
	}

	public void setReqOwner(Customer reqOwner) {
		this.reqOwner = reqOwner;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MEDIA_OWNER")
	public Customer getMediaOwner() {
		return this.mediaOwner;
	}

	public void setMediaOwner(Customer mediaOwner) {
		this.mediaOwner = mediaOwner;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "RECEIVER")
	public Customer getReceiver() {
		return receiver;
	}

	public void setReceiver(Customer receiver) {
		this.receiver = receiver;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LOAN_ID")
	public Loan getLoan() {
		return loan;
	}

	public void setLoan(Loan loan) {
		this.loan = loan;
	}

	@Column(name = "PAYMENT_TYPE", length = 32)
	public String getPaymentType() {
		return paymentType;
	}

	public void setPaymentType(String paymentType) {
		this.paymentType = paymentType;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DELIVER_ID")
	public Deliverable getDeliverable() {
		return this.deliverable;
	}

	public void setDeliverable(Deliverable deliverable) {
		this.deliverable = deliverable;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MEDIA_ID", nullable = false)
	public Media getMedia() {
		return this.media;
	}

	public void setMedia(Media media) {
		this.media = media;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "REQ_ID", nullable = false)
	public Requirement getRequirement() {
		return this.requirement;
	}

	public void setRequirement(Requirement requirement) {
		this.requirement = requirement;
	}

	@Column(name = "QUOTE_TYPE", length = 32)
	public String getQuoteType() {
		return this.quoteType;
	}

	public void setQuoteType(String quoteType) {
		this.quoteType = quoteType;
	}

	@Column(name = "AMOUNT", nullable = false)
	public int getAmount() {
		return this.amount;
	}

	public void setAmount(int amount) {
		this.amount = amount;
	}
	@Column(name = "AMOUNT_MEDIA", nullable = false)
	public int getAmountMedia() {
		return amountMedia;
	}

	public void setAmountMedia(int amountMedia) {
		this.amountMedia = amountMedia;
	}
	@Column(name = "TAX")
	public Integer getTax() {
		return tax;
	}

	public void setTax(Integer tax) {
		this.tax = tax;
	}

	@Column(name = "STATUS", length = 32)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "CREATE_BY", length = 32)
	public String getCreateBy() {
		return this.createBy;
	}

	public void setCreateBy(String createBy) {
		this.createBy = createBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATE_TIME", nullable = false, length = 19)
	public Date getCreateTime() {
		return this.createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	@Column(name = "MODIFY_BY", length = 32)
	public String getModifyBy() {
		return this.modifyBy;
	}

	public void setModifyBy(String modifyBy) {
		this.modifyBy = modifyBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "MODIFY_TIME", nullable = false, length = 19)
	public Date getModifyTime() {
		return this.modifyTime;
	}

	public void setModifyTime(Date modifyTime) {
		this.modifyTime = modifyTime;
	}

	@Column(name = "FINISHED")
	public boolean isFinished() {
		return finished;
	}

	public void setFinished(boolean finished) {
		this.finished = finished;
	}

	@Column(name = "REFUSE_REASON")
	public String getRefuseReason() {
		return refuseReason;
	}

	public void setRefuseReason(String refuseReason) {
		this.refuseReason = refuseReason;
	}

	@Column(name = "INVOICE")
	public int getInvoice() {
		return invoice;
	}

	public void setInvoice(int invoice) {
		this.invoice = invoice;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "order")
	public Set<Invoice> getInvoices() {
		return this.invoices;
	}

	public void setInvoices(Set<Invoice> invoices) {
		this.invoices = invoices;
	}

	@Column(name = "HAS_MESSAGE4A")
	public boolean isHasMessage4A() {
		return hasMessage4A;
	}
	
	public void setHasMessage4A(boolean hasMessage4A) {
		this.hasMessage4A = hasMessage4A;
	}

	@Column(name = "HAS_MESSAGE4P")
	public boolean isHasMessage4P() {
		return hasMessage4P;
	}

	public void setHasMessage4P(boolean hasMessage4P) {
		this.hasMessage4P = hasMessage4P;
	}
	
}
